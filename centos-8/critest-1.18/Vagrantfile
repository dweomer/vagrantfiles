# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  #config.vagrant.plugins = ['vagrant-vbguest']
  #config.vbguest.auto_update = true

  config.vm.box = "dweomer/centos"
  config.vm.box_version = "8.2.2004"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/vagrant", disabled: true
  #config.vm.synced_folder "/go", "/go"

  if Vagrant.has_plugin?("vagrant-timezone")
    config.timezone.value = :host
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.cpus = 2
      vb.memory = "2048"
      vb.customize ["modifyvm", :id, "--audio", "none"]
    end
  end

  config.vm.provision "shell", name: "CONFIGURE IPv4 FORWARDING", inline: <<-SHELL
    echo 'net.ipv4.conf.all.forwarding = 1' > /etc/sysctl.d/55-ipv4-forwarding.conf
  SHELL

  config.vm.provision "shell", name: "CONFIGURE IPv6 FORWARDING", inline: <<-SHELL
    echo 'net.ipv6.conf.all.forwarding = 1' > /etc/sysctl.d/55-ipv6-forwarding.conf
  SHELL

  config.vm.provision "shell", name: "UPGRADE", inline: <<-SHELL
    set -x
    yum -y upgrade
    systemctl restart systemd-sysctl
    systemctl disable --now firewalld
  SHELL

  config.vm.provision "shell", name: "SCRIPTS", inline: <<-SHELL
    set -x
    mkdir -vp /usr/share/scripts
    chown -v :vagrant /usr/share/scripts
    chmod -v g+rw /usr/share/scripts
  SHELL
  config.vm.provision "file", source: "scripts/", destination: "/usr/share/"

  config.vm.provision "shell", name: "INSTALL", inline: <<-SHELL
    yum -y install \
        golang \
        libseccomp-devel \
        libselinux-devel \
        libsemanage \
        policycoreutils-devel \
        selinux-policy \
        selinux-policy-devel \
        selinux-policy-targeted \
        setools-console

    if [ ! -d /usr/src/container-selinux ]; then
      git clone https://github.com/containers/container-selinux.git /usr/src/container-selinux
    fi

    bash -ex /usr/share/scripts/install-cni.sh
    bash -ex /usr/share/scripts/install-ginkgo.sh
    bash -ex /usr/share/scripts/install-critools.sh
  SHELL

  config.vm.provision "shell", name: "CLEANUP", inline: <<-SHELL
    set -x
    yum -y clean all
  SHELL

end
